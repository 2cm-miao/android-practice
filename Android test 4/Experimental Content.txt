实验四  Service组件多线程设计

1、实验目的与任务： 
比较Service组件与Activity组件生命周期的区别。
掌握Service组件与Activity组件之间的通信方法，即借助Intent对象实现后台组件的调用、传递数据，以及同步返回运算结果。
掌握Service组件多线程设计模式，与Activity组件并发处理用户任务。

2、预习要求：
通篇学习教材第七章的内容，下载本课程学习涉及到的案例源码。

3、实验基本原理：
Intent对象可用于调用后台Service组件的行为描述，通过它可以和后台组件建立前台无切换的调用关系，也能在数据交换过程中用于封装前台输入数据与后台返回值。
Intent对象可降低前、后台组件之间的耦合度， Activity组件借助内部植入的Handler对象实现后台计算结果的获取并实时刷新显示。

4、实验环境：
JDK1.8、Android Studio、Android SDK、ADT

5、实验内容：
(1)在Eclipse中创建新的ANDROID应用工程用于实现某个整数区间内所有质数判定结果的逐一显示。
(2)该项目主要由1个Activity组件和1个Service组件实现，前端Activity组件提供数据提交界面，通过2个文本框填入整数区间的上限与下限值，点击提交按钮调用后台Service组件进行计算；Service组件接收到传递进来的2个整数参数后，设定整数区间范围，逐一判断每一个整数是否为质数；前端Activity组件将后台传来的判定结果同步刷新到文本显示区域，直至区间内所有整数判定完毕。
(3)在AndroidManifest配置文件中正确注册这2个组件；
(4)为当前应用的两个组件增加日志信息输出功能，分别为它们设置日志信息过滤器，并在LOGCAT中筛选显示它们的活动日志信息，以便于跟踪各自生命周期。
(5) 运行程序，通过USB数据线将应用载入ANDROID手机，演示程序运行效果的同时观察LOGCAT工具中的日志信息。
